import logging
from pathlib import Path
import sys

# Ensure local BPTK_Py package is discoverable if not installed system-wide
BASE_DIR = Path(__file__).resolve().parent
local_pkg = BASE_DIR / "bptk_py-main" / "bptk_py-main"
if local_pkg.exists():
    sys.path.append(str(local_pkg))

from BPTK_Py import Model
from BPTK_Py.modeling.simultaneousScheduler import SimultaneousScheduler
from BPTK_Py.sdsimulation import SdSimulation
import pandas as pd

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def build_model():
    """Create a simple causal loop model."""
    model = Model(starttime=0, stoptime=20, dt=1.0, name="population_model")
    model.scheduler = SimultaneousScheduler()

    population = model.stock("population")
    births = model.flow("births")
    deaths = model.flow("deaths")
    birth_rate = model.converter("birth_rate")
    death_rate = model.converter("death_rate")

    birth_rate.equation = 0.1  # 10% birth rate
    death_rate.equation = 0.05  # 5% death rate
    population.initial_value = 100.0

    births.equation = birth_rate * population
    deaths.equation = death_rate * population
    population.equation = births - deaths

    logger.debug("Model created with initial population %s", population.initial_value)
    return model


def run_simulation(model: Model, results_file: Path) -> None:
    """Run the simulation and store results to a CSV file."""
    logger.info("Starting simulation until t=%s", model.stoptime)
    simulation = SdSimulation(model=model, name=model.name)
    result_frame = simulation.start(output=["frame"], equations=["population", "births", "deaths"])
    if result_frame is None:
        logger.error("No results generated by simulation")
        return
    result_frame.to_csv(results_file)
    logger.info("Results written to %s", results_file)


if __name__ == "__main__":
    try:
        model = build_model()
        run_simulation(model, Path("results.csv"))
    except Exception as exc:
        logger.exception("Simulation failed: %s", exc)
        sys.exit(1)
